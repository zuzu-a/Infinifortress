name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  SOLUTION_FILE: code/Infiniminer.sln

jobs:
  build:
    runs-on: windows-latest  # Since this is a MonoGame project, we'll stick to Windows for now

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore Dependencies
      run: |
        dotnet restore ${{ env.SOLUTION_FILE }}
        
    - name: Build
      run: |
        msbuild ${{ env.SOLUTION_FILE }} /p:Configuration=Release /p:Platform="Any CPU"

    - name: Package Release
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        mkdir release
        cp code/**/bin/Release/**/*.dll release/
        cp code/**/bin/Release/**/*.exe release/
        cp code/**/bin/Release/**/*.config release/
        cp code/**/bin/Release/**/Content/** release/Content/
        cp README* release/ || true
        cp LICENSE* release/ || true
        7z a Infinifortress2.zip ./release/*

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: Infinifortress2.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 