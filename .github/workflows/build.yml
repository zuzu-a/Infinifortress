name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

# Add permissions needed for creating releases
permissions:
  contents: write
  packages: write
  pull-requests: write

env:
  SOLUTION_FILE: code/Infiniminer.sln
  DOTNET_VERSION: '8.0.x'

jobs:
  build:
    strategy:
      matrix:
        config:
          - os: windows-latest
            rid: win-x64
            platform: Windows
          - os: ubuntu-latest
            rid: linux-x64
            platform: Linux
          - os: macos-latest
            rid: osx-x64
            platform: MacOS
    
    runs-on: ${{ matrix.config.os }}
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # For version tagging
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Update Version (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      shell: pwsh
      run: |
        $version = "${{ github.ref_name }}"
        $file = "code/InfiniminerShared/SharedConstants.cs"
        $content = Get-Content $file
        $content = $content -replace 'INFINIMINER_VERSION = ".*?"', "INFINIMINER_VERSION = `"$version Infinifortress`""
        Set-Content $file $content

    - name: Install MGCB
      run: |
        dotnet tool install -g dotnet-mgcb
        dotnet tool install -g dotnet-mgcb-editor
        dotnet tool restore

    - name: Restore Dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build Content
      shell: pwsh
      run: |
        cd code/InfiniminerClient/Content
        mgcb Content.mgcb /platform:${{ matrix.config.platform }}

    - name: Build Client
      shell: pwsh
      run: |
        dotnet publish code/InfiniminerClient/InfiniminerClient.csproj `
          -c Release `
          -r ${{ matrix.config.rid }} `
          --self-contained true `
          -p:PublishSingleFile=true `
          -o "publish/Infinifortress2-${{ matrix.config.platform }}-Client"

    - name: Build Server
      shell: pwsh
      run: |
        dotnet publish code/InfiniminerServer/InfiniminerServer.csproj `
          -c Release `
          -r ${{ matrix.config.rid }} `
          --self-contained true `
          -p:PublishSingleFile=true `
          -o "publish/Infinifortress2-${{ matrix.config.platform }}-Server"

    - name: Package Builds
      shell: pwsh
      run: |
        # Package client
        Compress-Archive `
          -Path "publish/Infinifortress2-${{ matrix.config.platform }}-Client/*" `
          -DestinationPath "Infinifortress2-${{ matrix.config.platform }}-Client.zip"
        
        # Package server
        Compress-Archive `
          -Path "publish/Infinifortress2-${{ matrix.config.platform }}-Server/*" `
          -DestinationPath "Infinifortress2-${{ matrix.config.platform }}-Server.zip"

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Infinifortress2-${{ matrix.config.platform }}
        path: |
          Infinifortress2-${{ matrix.config.platform }}-Client.zip
          Infinifortress2-${{ matrix.config.platform }}-Server.zip
        retention-days: 5

  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v2
        
      - name: Display structure
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Infinifortress2 ${{ github.ref_name }}
          files: |
            */Infinifortress2-*-Client.zip
            */Infinifortress2-*-Server.zip
          body: |
            Release ${{ github.ref_name }}
            
            This release includes:
            
            Windows:
            - Infinifortress2-Windows-Client.zip
            - Infinifortress2-Windows-Server.zip
            
            Linux:
            - Infinifortress2-Linux-Client.zip
            - Infinifortress2-Linux-Server.zip
            
            macOS:
            - Infinifortress2-MacOS-Client.zip
            - Infinifortress2-MacOS-Server.zip 